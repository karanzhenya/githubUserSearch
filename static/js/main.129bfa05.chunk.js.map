{"version":3,"sources":["api/usersApi.tsx","redux/appReducer.tsx","redux/profileReducer.tsx","redux/store.ts","components/profile/subscriptions/Subscriptions.tsx","components/profile/repositories/Repo/Repo.tsx","components/profile/repositories/Repositories.tsx","components/startPage/StartPage.tsx","components/profile/paginator/Paginator.tsx","components/profile/Profile.tsx","components/header/search/SearchField.tsx","assets/github_icon.png","components/header/Header.tsx","App.tsx","index.tsx","components/profile/Profile.module.scss","components/profile/repositories/Repo/Repo.module.scss","components/header/search/SearchField.module.scss","components/header/Header.module.scss","components/startPage/StartPage.module.scss","App.module.scss"],"names":["instance","axios","create","baseURL","usersApi","login","get","data","page","initialState","status","error","ChangeLoadingStatus","type","id","avatar_url","url","followers_url","following_url","repos_url","public_repos","name","followers","following","repositories","SetUserProfile","SetUserRepositories","repos","rootReducer","combineReducers","profile","state","action","app","store","createStore","applyMiddleware","thunk","window","Subscriptions","props","className","s","subscriptions","style","color","Repo","Paper","elevation","repo_block","target","rel","href","repo","repo_description","description","Repositories","repo_container","undefined","map","r","StartPage","precept","Paginator","dispatch","useDispatch","useState","currentPage","setCurrentPage","totalRepos","Math","ceil","pages","i","push","getUserReposCurrentPage","getState","a","console","log","GetUserReposCurrentPageTC","Pagination","shape","count","onChange","_","numPage","Profile","appState","LinearProgress","preloader","container","left_part","alt","src","right_part","Number","SearchField","navigate","useNavigate","formik","useFormik","initialValues","onSubmit","values","trim","PATH","PROFILE","handleSubmit","search","icon","handleChange","value","Header","header","github_icon","START_PAGE","PAGE404","App","useSelector","useEffect","path","element","padding","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.129bfa05.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.github.com/users/'\r\n})\r\n\r\nexport const usersApi = {\r\n    async getUserProfile(login: string) {\r\n        const data = await instance.get(`${login}`)\r\n        return data\r\n    },\r\n    async getUserRepos(login: string) {\r\n        const data = await instance.get(`${login}/repos?per_page=4`)\r\n        return data.data\r\n    },\r\n    async getUserReposCurrentPage(login: string, page: number) {\r\n        const data = await instance.get(`${login}/repos?per_page=4&page=${page}`)\r\n        return data.data\r\n    }\r\n}","type StatusType = 'idle' | 'loading' | 'success' | 'failed';\r\n\r\nexport type InitialAppStateType = {\r\n    status: StatusType,\r\n    error: string\r\n}\r\n\r\nconst initialState: InitialAppStateType = {\r\n    status: 'idle',\r\n    error: ''\r\n}\r\n\r\ntype ChangeLoadingStatusActionType = {\r\n    type: 'CHANGE-LOADING-STATUS',\r\n    status: StatusType\r\n}\r\ntype SetErrorActionType = {\r\n    type: 'SET-ERROR',\r\n    error: string\r\n}\r\n\r\ntype ActionsType = ChangeLoadingStatusActionType | SetErrorActionType;\r\n\r\nexport const appReducer = (state: InitialAppStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"CHANGE-LOADING-STATUS\": {\r\n            return {...state, status: action.status}\r\n        }\r\n        case \"SET-ERROR\": {\r\n            return {...state, error: action.error}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const ChangeLoadingStatus = (status: StatusType) => {\r\n    return {type: 'CHANGE-LOADING-STATUS', status}\r\n}\r\nexport const SetError = (error: string) => {\r\n    return {type: 'SET-ERROR', error}\r\n}\r\n","import {usersApi} from \"../api/usersApi\"\r\nimport {Dispatch} from \"redux\";\r\nimport {AppRootStateType} from \"./store\";\r\nimport {ChangeLoadingStatus, SetError} from \"./appReducer\";\r\n\r\n\r\nexport type InitialProfileStateType = {\r\n    login: string,\r\n    id: number,\r\n    avatar_url: string,\r\n    url: string,\r\n    followers_url: string,\r\n    following_url: string,\r\n    repos_url: string,\r\n    public_repos: string,\r\n    name: string,\r\n    followers: number,\r\n    following: number,\r\n    repositories: Array<UserReposType>\r\n}\r\nexport type UserReposType = {\r\n    allow_forking: boolean\r\n    archive_url: string\r\n    archived: boolean\r\n    assignees_url: string\r\n    blobs_url: string\r\n    branches_url: string\r\n    clone_url: string\r\n    collaborators_url: string\r\n    comments_url: string\r\n    commits_url: string\r\n    compare_url: string\r\n    contents_url: string\r\n    contributors_url: string\r\n    created_at: string\r\n    default_branch: string\r\n    deployments_url: string\r\n    description: string\r\n    disabled: boolean\r\n    downloads_url: string\r\n    events_url: string\r\n    fork: boolean\r\n    forks: number\r\n    forks_count: number\r\n    forks_url: string\r\n    full_name: string\r\n    git_commits_url: string\r\n    git_refs_url: string\r\n    git_tags_url: string\r\n    git_url: string\r\n    has_downloads: boolean\r\n    has_issues: boolean\r\n    has_pages: boolean\r\n    has_projects: boolean\r\n    has_wiki: boolean\r\n    homepage: string\r\n    hooks_url: string\r\n    html_url: string\r\n    id: number\r\n    is_template: boolean\r\n    issue_comment_url: string\r\n    issue_events_url: string\r\n    issues_url: string\r\n    keys_url: string\r\n    labels_url: string\r\n    language: string\r\n    languages_url: string\r\n    license: {}\r\n    merges_url: string\r\n    milestones_url: string\r\n    mirror_url: null\r\n    name: string\r\n    node_id: string\r\n    notifications_url: string\r\n    open_issues: number\r\n    open_issues_count: number\r\n    owner: {}\r\n    private: boolean\r\n    pulls_url: string\r\n    pushed_at: string\r\n    releases_url: string\r\n    size: number\r\n    ssh_url: string\r\n    stargazers_count: number\r\n    stargazers_url: string\r\n    statuses_url: string\r\n    subscribers_url: string\r\n    subscription_url: string\r\n    svn_url: string\r\n    tags_url: string\r\n    teams_url: string\r\n    topics: []\r\n    trees_url: string\r\n    updated_at: string\r\n    url: string\r\n    visibility: string\r\n    watchers: number\r\n    watchers_count: number\r\n}\r\n\r\nconst initialState: InitialProfileStateType = {\r\n    login: '',\r\n    id: 0,\r\n    avatar_url: '',\r\n    url: '',\r\n    followers_url: '',\r\n    following_url: '',\r\n    repos_url: '',\r\n    public_repos: '',\r\n    name: '',\r\n    followers: 0,\r\n    following: 0,\r\n    repositories: []\r\n} as InitialProfileStateType\r\n\r\ntype SetUserProfileActionType = {\r\n    type: 'SET_USER_PROFILE',\r\n    data: InitialProfileStateType\r\n}\r\ntype SetUserReposActionType = {\r\n    type: 'SET_USER_REPOS',\r\n    repos: UserReposType[]\r\n}\r\n\r\ntype ActionsType =\r\n    SetUserProfileActionType\r\n    | SetUserReposActionType;\r\n\r\nexport const profileReducer = (state: InitialProfileStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SET_USER_PROFILE': {\r\n            /*let stateCopy = {...state}\r\n            stateCopy = action.data\r\n            return stateCopy*/\r\n            return {...state, ...action.data}\r\n        }\r\n        case \"SET_USER_REPOS\": {\r\n            return {...state, repositories: action.repos}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const SetUserProfile = (data: InitialProfileStateType) => {\r\n    return {type: 'SET_USER_PROFILE', data}\r\n}\r\nexport const SetUserRepositories = (repos: Array<UserReposType>) => {\r\n    return {type: 'SET_USER_REPOS', repos}\r\n}\r\n\r\nexport const GetUserProfileTC = (login: string) => async (dispatch: Dispatch) => {\r\n    dispatch(ChangeLoadingStatus(\"loading\"))\r\n    try {\r\n        const data = await usersApi.getUserProfile(login)\r\n        dispatch(SetUserProfile(data.data))\r\n        const repos = await usersApi.getUserRepos(login)\r\n        dispatch(SetUserRepositories(repos))\r\n        dispatch(ChangeLoadingStatus(\"success\"))\r\n    } catch (err) {\r\n        if (err) {\r\n            dispatch(SetError(\"User not found\"))\r\n            dispatch(ChangeLoadingStatus(\"failed\"))\r\n        }\r\n    }\r\n    /*dispatch(ChangeLoadingStatus())\r\n    usersApi.getUserProfile(login)\r\n        .then((res) => {\r\n            dispatch(SetUserProfile(res.data))\r\n        })\r\n        .catch((err: AxiosError) => {\r\n            console.log(\"User \" + err.response?.data.message)\r\n            dispatch(ChangeLoadingStatus())\r\n        })\r\n    usersApi.getUserRepos(login).then((repos) => {\r\n        dispatch(SetUserRepositories(repos))\r\n    })*/\r\n\r\n}\r\nexport const GetUserReposCurrentPageTC = (page: number) => async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n    const login = getState().profile.login\r\n    try {\r\n        const repos = await usersApi.getUserReposCurrentPage(login, page)\r\n        dispatch(SetUserRepositories(repos))\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import SupervisorAccountIcon from '@mui/icons-material/SupervisorAccount';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport s from '../Profile.module.scss'\r\n\r\ntype SubscriptionsPropsType = {\r\n    followers: number,\r\n    following: number\r\n}\r\n\r\nexport const Subscriptions = (props: SubscriptionsPropsType) => {\r\n    return (\r\n        <div className={s.subscriptions}>\r\n            <SupervisorAccountIcon style={{color: \"grey\"}}/>\r\n            <span className={s.followers}>{props.followers} followers</span>\r\n            <PersonIcon style={{color: \"grey\"}}/>\r\n            <span className={s.following}>{props.following} following</span>\r\n        </div>\r\n    )\r\n}\r\n","import {UserReposType, InitialProfileStateType} from \"../../../../redux/profileReducer\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport s from \"./Repo.module.scss\";\r\n\r\ntype RepositoriesPropType = {\r\n    profile: InitialProfileStateType,\r\n    repo: UserReposType\r\n}\r\n\r\nexport const Repo = (props: RepositoriesPropType) => {\r\n    return (\r\n        <Paper elevation={1}>\r\n            <div className={s.repo_block}>\r\n                <a target=\"_blank\" rel=\"noreferrer\"\r\n                   href={`https://github.com/${props.profile.login}/${props.repo.name}`}>{props.repo.name}</a>\r\n                <div className={s.repo_description}>\r\n                    {props.repo.description}\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}","import {InitialProfileStateType} from \"../../../redux/profileReducer\";\r\nimport {Repo} from \"./Repo/Repo\";\r\nimport s from \"../Profile.module.scss\";\r\n\r\ntype RepositoriesPropType = {\r\n    profile: InitialProfileStateType\r\n}\r\n\r\nexport const Repositories = (props: RepositoriesPropType) => {\r\n    return (\r\n        <div className={s.repo_container}>\r\n            {\r\n                props.profile.repositories !== undefined ? props.profile.repositories.map(r => {\r\n                    return <Repo key={r.id} profile={props.profile} repo={r}/>\r\n                }) : null}\r\n        </div>\r\n    )\r\n}","import s from './StartPage.module.scss';\r\n\r\nexport const StartPage = () => {\r\n    return <h1 className={s.precept}>Please, find user in base!</h1>\r\n}","import {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {GetUserReposCurrentPageTC} from \"../../../redux/profileReducer\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\n\r\n\r\ntype PaginatorPropTypes = {\r\n    repos: number\r\n}\r\n\r\nexport const Paginator = (props: PaginatorPropTypes) => {\r\n    const dispatch = useDispatch();\r\n    const [currentPage, setCurrentPage] = useState<number>(1)\r\n\r\n    const totalRepos = Math.ceil(props.repos / 4)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= totalRepos; i++) {\r\n        pages.push(i)\r\n    }\r\n    const getUserReposCurrentPage = (page: number) => {\r\n        setCurrentPage(page)\r\n        dispatch(GetUserReposCurrentPageTC(page))\r\n    }\r\n    return (\r\n        <Pagination shape={\"rounded\"} count={totalRepos} page={currentPage} onChange={(_, numPage) => {\r\n            getUserReposCurrentPage(numPage)\r\n        }}/>\r\n    )\r\n}","import {InitialProfileStateType} from \"../../redux/profileReducer\";\r\nimport {Subscriptions} from \"./subscriptions/Subscriptions\";\r\nimport {Repositories} from \"./repositories/Repositories\";\r\nimport {StartPage} from \"../startPage/StartPage\";\r\nimport {Paginator} from \"./paginator/Paginator\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport {InitialAppStateType} from \"../../redux/appReducer\";\r\nimport s from './Profile.module.scss'\r\n\r\ntype ProfilePropType = {\r\n    profile: InitialProfileStateType,\r\n    appState: InitialAppStateType\r\n}\r\nexport const Profile = ({profile, appState}: ProfilePropType) => {\r\n\r\n    if (appState.status === \"loading\") {\r\n        return <LinearProgress color=\"primary\" className={s.preloader}/>\r\n    }\r\n    if (profile.id === undefined) {\r\n        return <StartPage/>\r\n    } else {\r\n        return (\r\n            <div className={s.container}>\r\n                <div className={s.left_part}>\r\n                    <img alt='avatar' src={profile.avatar_url}/>\r\n                    <h1 className={s.name}>{profile.name}</h1>\r\n                    <a target=\"_blank\" rel=\"noreferrer\" href={`https://github.com/${profile.login}`}>{profile.login}</a>\r\n                    <Subscriptions followers={profile.followers} following={profile.following}/>\r\n                </div>\r\n                <div className={s.right_part}>\r\n                    <h1>Repositories ({profile.public_repos})</h1>\r\n                    <Repositories profile={profile} key={profile.id}/>\r\n                    <Paginator repos={Number(profile.public_repos)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n","import * as React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {GetUserProfileTC} from \"../../../redux/profileReducer\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport s from \"./SearchField.module.scss\"\r\nimport {useFormik} from \"formik\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {PATH} from \"../../../App\";\r\n\r\nexport const SearchField = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            login: ''\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(GetUserProfileTC(values.login.trim()))\r\n            navigate(`${PATH.PROFILE}/${formik.values.login}`)\r\n        }\r\n    });\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <section className={s.search}>\r\n                <SearchIcon className={s.icon}/>\r\n                <input name=\"login\"\r\n                       onChange={formik.handleChange}\r\n                       value={formik.values.login}/>\r\n            </section>\r\n        </form>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/github_icon.3b23ef3c.png\";","import {SearchField} from \"./search/SearchField\";\r\nimport github_icon from \"../../assets/github_icon.png\"\r\nimport s from './Header.module.scss'\r\n\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.container}>\r\n                <a href='https://github.com/'>\r\n                    <img src={github_icon} alt='logo'/>\r\n                </a>\r\n                <SearchField/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {Route, Routes, useNavigate} from 'react-router-dom';\nimport {useSelector} from \"react-redux\";\nimport {useEffect} from 'react';\nimport {Profile} from \"./components/profile/Profile\";\nimport {Header} from \"./components/header/Header\";\nimport {StartPage} from \"./components/startPage/StartPage\";\nimport {AppRootStateType} from \"./redux/store\";\nimport {InitialProfileStateType} from \"./redux/profileReducer\";\nimport {InitialAppStateType} from \"./redux/appReducer\";\nimport s from './App.module.scss'\n\nexport const PATH = {\n    START_PAGE: 'githubUserSearch',\n    PAGE404: '404',\n    PROFILE: `githubUserSearch/profile/`\n}\n\nexport const App = () => {\n\n    const navigate = useNavigate();\n\n    const profile = useSelector<AppRootStateType, InitialProfileStateType>(state => state.profile)\n    const appState = useSelector<AppRootStateType, InitialAppStateType>(state => state.app)\n\n    useEffect(() => {\n        if (appState.status === \"failed\") {\n            navigate(PATH.PAGE404)\n        }\n        if (profile.id === 0) {\n            navigate(PATH.START_PAGE)\n        }\n    }, [appState.status])\n\n    return (\n        <div className={s.app}>\n            <Header/>\n            <Routes>\n                <Route path={PATH.START_PAGE} element={<StartPage/>}/>\n                <Route path={PATH.PAGE404} element={<h1 style={{padding: \"100px\"}}>Page not found!</h1>}/>\n                <Route path={PATH.PROFILE + `${profile.login}`}\n                       element={<Profile profile={profile} appState={appState}/>}/>\n            </Routes>\n        </div>\n    )\n}","import ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport {store} from \"./redux/store\";\nimport {App} from './App';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__2KtW2\",\"left_part\":\"Profile_left_part__1xCdP\",\"subscriptions\":\"Profile_subscriptions__1L17Q\",\"right_part\":\"Profile_right_part__1Mlqe\",\"repo_container\":\"Profile_repo_container__1rVVI\",\"preloader\":\"Profile_preloader__1osH0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"repo_block\":\"Repo_repo_block__1eHwY\",\"repo_description\":\"Repo_repo_description__3nQxh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchField_search__2F1KB\",\"icon\":\"SearchField_icon__3zo4s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2PbdY\",\"container\":\"Header_container__7T9th\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"precept\":\"StartPage_precept__1WRzY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3n6nY\"};"],"sourceRoot":""}