{"version":3,"sources":["components/profile/avatar/Avatar.tsx","components/profile/subscriptions/Subscriptions.tsx","components/profile/repositories/Repo/Repo.tsx","components/profile/repositories/Repositories.tsx","api/usersApi.tsx","redux/appReducer.tsx","redux/profileReducer.tsx","components/profile/paginator/Paginator.tsx","components/startPage/StartPage.tsx","components/profile/Profile.tsx","components/header/search/SearchField.tsx","utils/github_icon.png","components/header/Header.tsx","App.tsx","redux/store.ts","index.tsx","components/profile/Profile.module.css","components/profile/subscriptions/Subscriptions.module.css","components/profile/repositories/Repo/Repo.module.css","components/header/search/SearchField.module.css","components/header/Header.module.css","App.module.css","components/profile/avatar/Avatar.module.css","components/profile/repositories/Repositories.module.css","components/startPage/StartPage.module.css"],"names":["Avatar","props","className","s","avatar","alt","src","avatar_url","Subscriptions","subscriptions","style","color","followers","following","Repo","Paper","elevation","repo_block","target","rel","href","profile","login","repo","name","repo_description","description","Repositories","repo_container","undefined","repositories","map","r","id","usersApi","axios","get","data","page","initialState","status","error","ChangeLoadingStatus","type","SetUserProfile","SetUserRepositories","repos","Paginator","dispatch","useDispatch","useState","currentPage","setCurrentPage","totalRepos","Math","ceil","pages","i","push","getUserReposCurrentPage","getState","a","console","log","GetUserReposCurrentPageTC","Pagination","shape","count","onChange","_","numPage","StartPage","precept","Profile","appState","LinearProgress","preloader","container","left_part","right_part","public_repos","Number","SearchField","navigate","useNavigate","formik","useFormik","initialValues","onSubmit","values","trim","handleSubmit","search","icon","handleChange","value","Header","header","github_icon","App","useSelector","state","app","useEffect","path","element","padding","rootReducer","combineReducers","action","stateCopy","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9f8211e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './Avatar.module.css'\r\n\r\ntype AvatarPropsType = {\r\n    avatar_url: string\r\n}\r\n\r\nexport const Avatar = (props: AvatarPropsType) => {\r\n    return (\r\n        <div className={s.avatar}>\r\n            <img alt='avatar' src={props.avatar_url}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './Subscriptions.module.css'\r\nimport SupervisorAccountIcon from '@mui/icons-material/SupervisorAccount';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\ntype SubscriptionsPropsType = {\r\n    followers: number,\r\n    following: number\r\n}\r\n\r\nexport const Subscriptions = (props: SubscriptionsPropsType) => {\r\n\r\n    return (\r\n        <div className={s.subscriptions}>\r\n           <SupervisorAccountIcon style={{color: \"grey\"}}/><span className={s.followers}>{props.followers} followers</span>\r\n           <PersonIcon style={{color: \"grey\"}}/><span className={s.following}>{props.following} following</span>\r\n        </div>\r\n    )\r\n}\r\n","import * as React from \"react\";\r\nimport s from \"./Repo.module.css\";\r\nimport {UserReposType, InitialProfileStateType} from \"../../../../redux/profileReducer\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\ntype RepositoriesPropType = {\r\n    profile: InitialProfileStateType,\r\n    repo: UserReposType\r\n}\r\n\r\nexport const Repo = (props: RepositoriesPropType) => {\r\n    return (\r\n        <Paper elevation={1}>\r\n            <div className={s.repo_block}>\r\n                <a target=\"_blank\" rel=\"noreferrer\"\r\n                   href={`https://github.com/${props.profile.login}/${props.repo.name}`}>{props.repo.name}</a>\r\n                <div className={s.repo_description}>\r\n                    {props.repo.description}\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}","import * as React from \"react\";\r\nimport s from \"./Repositories.module.css\";\r\nimport {InitialProfileStateType} from \"../../../redux/profileReducer\";\r\nimport {Repo} from \"./Repo/Repo\";\r\n\r\ntype RepositoriesPropType = {\r\n    profile: InitialProfileStateType\r\n}\r\n\r\nexport const Repositories = (props: RepositoriesPropType) => {\r\n    return (\r\n        <div className={s.repo_container}>\r\n            {\r\n                props.profile.repositories !== undefined ? props.profile.repositories.map(r => {\r\n                    return <Repo key={r.id} profile={props.profile} repo={r}/>\r\n                }) : null}\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nexport const usersApi = {\r\n    async getUserProfile (login: string) {\r\n        const data = await axios.get(`https://api.github.com/users/${login}`)\r\n        return data\r\n    },\r\n    async getUserRepos (login: string) {\r\n        const data = await axios.get(`https://api.github.com/users/${login}/repos?per_page=4`)\r\n        return data.data\r\n    },\r\n     async getUserReposCurrentPage (login: string, page: number) {\r\n         const data = await axios.get(`https://api.github.com/users/${login}/repos?per_page=4&page=${page}`)\r\n         return data.data\r\n     }\r\n}","type StatusType = 'idle' | 'loading' | 'success' | 'failed';\r\n\r\nexport type InitialAppStateType = {\r\n    status: StatusType,\r\n    error: string\r\n}\r\n\r\n\r\nconst initialState: InitialAppStateType = {\r\n    status: 'idle',\r\n    error: ''\r\n}\r\n\r\ntype ChangeLoadingStatusActionType = {\r\n    type: 'CHANGE-LOADING-STATUS',\r\n    status: StatusType\r\n}\r\ntype SetErrorActionType = {\r\n    type: 'SET-ERROR',\r\n    error: string\r\n}\r\n\r\ntype ActionsType = ChangeLoadingStatusActionType | SetErrorActionType;\r\n\r\nexport const appReducer = (state: InitialAppStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"CHANGE-LOADING-STATUS\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.status = action.status\r\n            return stateCopy\r\n        }\r\n        case \"SET-ERROR\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.error = action.error\r\n            return stateCopy\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const ChangeLoadingStatus = (status: StatusType) => {\r\n    return {type: 'CHANGE-LOADING-STATUS', status}\r\n}\r\nexport const SetError = (error: string) => {\r\n    return {type: 'SET-ERROR', error}\r\n}\r\n","import {usersApi} from \"../api/usersApi\"\r\nimport {Dispatch} from \"redux\";\r\nimport {AppRootStateType} from \"./store\";\r\nimport {ChangeLoadingStatus, SetError} from \"./appReducer\";\r\n\r\n\r\nexport type InitialProfileStateType = {\r\n    login: string,\r\n    id: number,\r\n    avatar_url: string,\r\n    url: string,\r\n    followers_url: string,\r\n    following_url: string,\r\n    repos_url: string,\r\n    public_repos: string,\r\n    name: string,\r\n    followers: number,\r\n    following: number,\r\n    repositories: Array<UserReposType>\r\n}\r\nexport type UserReposType = {\r\n    allow_forking: boolean\r\n    archive_url: string\r\n    archived: boolean\r\n    assignees_url: string\r\n    blobs_url: string\r\n    branches_url: string\r\n    clone_url: string\r\n    collaborators_url: string\r\n    comments_url: string\r\n    commits_url: string\r\n    compare_url: string\r\n    contents_url: string\r\n    contributors_url: string\r\n    created_at: string\r\n    default_branch: string\r\n    deployments_url: string\r\n    description: string\r\n    disabled: boolean\r\n    downloads_url: string\r\n    events_url: string\r\n    fork: boolean\r\n    forks: number\r\n    forks_count: number\r\n    forks_url: string\r\n    full_name: string\r\n    git_commits_url: string\r\n    git_refs_url: string\r\n    git_tags_url: string\r\n    git_url: string\r\n    has_downloads: boolean\r\n    has_issues: boolean\r\n    has_pages: boolean\r\n    has_projects: boolean\r\n    has_wiki: boolean\r\n    homepage: string\r\n    hooks_url: string\r\n    html_url: string\r\n    id: number\r\n    is_template: boolean\r\n    issue_comment_url: string\r\n    issue_events_url: string\r\n    issues_url: string\r\n    keys_url: string\r\n    labels_url: string\r\n    language: string\r\n    languages_url: string\r\n    license: {}\r\n    merges_url: string\r\n    milestones_url: string\r\n    mirror_url: null\r\n    name: string\r\n    node_id: string\r\n    notifications_url: string\r\n    open_issues: number\r\n    open_issues_count: number\r\n    owner: {}\r\n    private: boolean\r\n    pulls_url: string\r\n    pushed_at: string\r\n    releases_url: string\r\n    size: number\r\n    ssh_url: string\r\n    stargazers_count: number\r\n    stargazers_url: string\r\n    statuses_url: string\r\n    subscribers_url: string\r\n    subscription_url: string\r\n    svn_url: string\r\n    tags_url: string\r\n    teams_url: string\r\n    topics: []\r\n    trees_url: string\r\n    updated_at: string\r\n    url: string\r\n    visibility: string\r\n    watchers: number\r\n    watchers_count: number\r\n}\r\n\r\nconst initialState: InitialProfileStateType = {} as InitialProfileStateType\r\n\r\ntype SetUserProfileActionType = {\r\n    type: 'SET_USER_PROFILE',\r\n    data: InitialProfileStateType\r\n}\r\ntype SetUserReposActionType = {\r\n    type: 'SET_USER_REPOS',\r\n    repos: UserReposType[]\r\n}\r\n\r\ntype ActionsType =\r\n    SetUserProfileActionType\r\n    | SetUserReposActionType;\r\n\r\nexport const profileReducer = (state: InitialProfileStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SET_USER_PROFILE': {\r\n            let stateCopy = {...state}\r\n            stateCopy = action.data\r\n            return stateCopy\r\n        }\r\n        case \"SET_USER_REPOS\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.repositories = action.repos\r\n            return stateCopy\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const SetUserProfile = (data: InitialProfileStateType) => {\r\n    return {type: 'SET_USER_PROFILE', data}\r\n}\r\nexport const SetUserRepositories = (repos: Array<UserReposType>) => {\r\n    return {type: 'SET_USER_REPOS', repos}\r\n}\r\n\r\nexport const GetUserProfileTC = (login: string) => async (dispatch: Dispatch) => {\r\n    debugger\r\n    dispatch(ChangeLoadingStatus(\"loading\"))\r\n    try {\r\n        const data = await usersApi.getUserProfile(login)\r\n        dispatch(SetUserProfile(data.data))\r\n        const repos = await usersApi.getUserRepos(login)\r\n        dispatch(SetUserRepositories(repos))\r\n        dispatch(ChangeLoadingStatus(\"success\"))\r\n    } catch (err) {\r\n        if (err) {\r\n            dispatch(SetError(\"User not found\"))\r\n            dispatch(ChangeLoadingStatus(\"failed\"))\r\n        }\r\n    }\r\n    /*dispatch(ChangeLoadingStatus())\r\n    usersApi.getUserProfile(login)\r\n        .then((res) => {\r\n            dispatch(SetUserProfile(res.data))\r\n        })\r\n        .catch((err: AxiosError) => {\r\n            console.log(\"User \" + err.response?.data.message)\r\n            dispatch(ChangeLoadingStatus())\r\n        })\r\n    usersApi.getUserRepos(login).then((repos) => {\r\n        dispatch(SetUserRepositories(repos))\r\n    })*/\r\n\r\n}\r\nexport const GetUserReposCurrentPageTC = (page: number) => async (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n    const login = getState().profile.login\r\n    try {\r\n        const repos = await usersApi.getUserReposCurrentPage(login, page)\r\n        dispatch(SetUserRepositories(repos))\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n","import React, {useState} from 'react';\r\nimport {GetUserReposCurrentPageTC} from \"../../../redux/profileReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Pagination} from \"@mui/material\";\r\n\r\n\r\ntype PaginatorPropTypes = {\r\n    repos: number\r\n}\r\n\r\nexport const Paginator = (props: PaginatorPropTypes) => {\r\n    const dispatch = useDispatch();\r\n    const [currentPage, setCurrentPage] = useState<number>(1)\r\n\r\n    const totalRepos = Math.ceil(props.repos / 4)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= totalRepos; i++) {\r\n        pages.push(i)\r\n    }\r\n    const getUserReposCurrentPage = (page: number) => {\r\n        setCurrentPage(page)\r\n        dispatch(GetUserReposCurrentPageTC(page))\r\n    }\r\n    return (\r\n        <Pagination shape={\"rounded\"} count={totalRepos} page={currentPage} onChange={(_, numPage) => {\r\n            getUserReposCurrentPage(numPage)\r\n        }}/>\r\n    )\r\n}","import React from 'react';\r\nimport s from './StartPage.module.css';\r\n\r\nconst StartPage = () => {\r\n    return <h1 className={s.precept}>Please, find user in base!</h1>\r\n}\r\n\r\nexport default StartPage;","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport {InitialProfileStateType} from \"../../redux/profileReducer\";\r\nimport {Avatar} from \"./avatar/Avatar\";\r\nimport {Subscriptions} from \"./subscriptions/Subscriptions\";\r\nimport {Repositories} from \"./repositories/Repositories\";\r\nimport {Paginator} from \"./paginator/Paginator\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport StartPage from \"../startPage/StartPage\";\r\nimport {InitialAppStateType} from \"../../redux/appReducer\";\r\n\r\ntype ProfilePropType = {\r\n    profile: InitialProfileStateType,\r\n    appState: InitialAppStateType\r\n}\r\nexport const Profile = ({profile, appState}: ProfilePropType) => {\r\n\r\n    if (appState.status === \"loading\") {\r\n        return <LinearProgress color=\"primary\" className={s.preloader}/>\r\n    }\r\n    if (profile.id === undefined) {\r\n        return <StartPage/>\r\n    }\r\n     else {return (\r\n        <div className={s.container}>\r\n            <div className={s.left_part}>\r\n                <Avatar avatar_url={profile.avatar_url}/>\r\n                <h1 className={s.name}>{profile.name}</h1>\r\n                <a target=\"_blank\" rel=\"noreferrer\" href={`https://github.com/${profile.login}`}>{profile.login}</a>\r\n                <Subscriptions followers={profile.followers} following={profile.following}/>\r\n            </div>\r\n            <div className={s.right_part}>\r\n                <h1>Repositories ({profile.public_repos})</h1>\r\n                <Repositories profile={profile} key={profile.id}/>\r\n                <Paginator repos={Number(profile.public_repos)}/>\r\n            </div>\r\n        </div>\r\n    )}\r\n\r\n\r\n}\r\n","import * as React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {GetUserProfileTC} from \"../../../redux/profileReducer\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport s from \"./SearchField.module.css\"\r\nimport {useFormik} from \"formik\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport const SearchField = () => {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            login: ''\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(GetUserProfileTC(values.login.trim()))\r\n            navigate(`profile/${formik.values.login}`)\r\n        }\r\n    });\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className={s.search}>\r\n                <SearchIcon className={s.icon}/><input  name=\"login\"\r\n                                                        onChange={formik.handleChange}\r\n                                                        value={formik.values.login}/>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/github_icon.3b23ef3c.png\";","import React from 'react';\r\nimport {SearchField} from \"./search/SearchField\";\r\nimport github_icon from \"../../utils/github_icon.png\"\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.container}>\r\n                    <a href='https://github.com/'><img src={github_icon} alt='logo'/></a>\r\n                    <SearchField/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React, {useEffect} from 'react';\nimport s from './App.module.css';\nimport {Profile} from \"./components/profile/Profile\";\nimport Header from \"./components/header/Header\";\nimport {Route, Routes, useNavigate} from 'react-router-dom';\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./redux/store\";\nimport {InitialProfileStateType} from \"./redux/profileReducer\";\nimport StartPage from \"./components/startPage/StartPage\";\nimport {InitialAppStateType} from \"./redux/appReducer\";\n\nfunction App() {\n\n    const navigate = useNavigate();\n\n    const profile = useSelector<AppRootStateType, InitialProfileStateType>(state => state.profile)\n    const appState = useSelector<AppRootStateType, InitialAppStateType>(state => state.app)\n    useEffect(() => {\n        if (appState.status === \"failed\") {\n            navigate('404')\n        }\n    }, [appState.status])\n    return (\n        <div className={s.app}>\n            <Header/>\n            <Routes>\n                <Route path='/' element={<StartPage/>}/>\n                <Route path='404' element={<h1 style={{padding: \"100px\"}}>Page not found!</h1>}/>\n                <Route path={`/profile/${profile.login}`} element={<Profile profile={profile} appState={appState}/>}/>\n            </Routes>\n        </div>\n    )\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {store} from \"./redux/store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__10Mec\",\"left_part\":\"Profile_left_part__1kU3T\",\"subscriptions\":\"Profile_subscriptions__skPko\",\"precept\":\"Profile_precept__m-JcG\",\"preloader\":\"Profile_preloader__1rSIi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subscriptions\":\"Subscriptions_subscriptions__3JPCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"repo_block\":\"Repo_repo_block__I1tWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchField_search__1DJF_\",\"icon\":\"SearchField_icon__1s_-J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2x9_2\",\"container\":\"Header_container__5mBbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2CeAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__14O9o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"repo_container\":\"Repositories_repo_container__304Wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"precept\":\"StartPage_precept__2Ofi0\"};"],"sourceRoot":""}